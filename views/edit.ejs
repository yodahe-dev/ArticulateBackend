<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        #preview-container.zoomed #preview-image {
            transform: scale(1.2); /* Adjust zoom level as needed */
        }
    </style>
</head>
<body class="bg-gray-900">
<div class="max-w-2xl mx-auto bg-white p-6 mt-10 rounded-xl shadow-xl">
    <form id="editPostForm" action="/profile/edit-post" method="POST" enctype="multipart/form-data" class="space-y-6">
        <input type="hidden" name="id" value="<%= post.post_id %>">

        <div>
            <label for="title" class="block font-medium text-gray-700">Title</label>
            <input type="text" id="title" name="title" value="<%= post.title %>" required maxlength="100"
                   class="w-full mt-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f8b102]">
            <span id="titleError" class="text-red-500 text-sm hidden">Invalid title</span>
        </div>

        <div>
            <label for="content" class="block font-medium text-gray-700">Content</label>
            <textarea id="content" name="content" required maxlength="100000" rows="5"
                      class="w-full mt-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f8b102]"><%= post.content %></textarea>
            <span id="contentError" class="text-red-500 text-sm hidden">Invalid content</span>
        </div>

        <div>
            <label for="category" class="block font-medium text-gray-700">Category</label>
            <select id="category" name="category_id" required
                    class="w-full mt-1 px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#f8b102]">
                <% categories.forEach(category => { %>
                    <option value="<%= category.category_id %>" <%= category.category_id === post.category_id ? 'selected' : '' %>
                            data-emoji="<%= ['🌟','🎨','🚀','📚','🍕','⚡','🎉','💡','🌍','🎭','🏆','🍩'][Math.floor(Math.random()*12)] %>">
                        <%= category.name %>
                    </option>
                <% }) %>
            </select>
        </div>

        <div>
            <label class="block font-medium text-gray-700 mb-2">Thumbnail</label>
            <div id="upload-area"
                 class="relative flex flex-col items-center justify-center w-full h-40 border-2 border-dashed border-gray-300 rounded-lg cursor-pointer hover:border-[#f8b102] transition">
                <svg class="w-12 h-12 text-gray-500 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0l-4 4m4-4v12"></path></svg>
                <span class="text-gray-500">Drag & drop or click to upload</span>
                <input type="file" name="thumbnail" accept="image/*" id="thumbnail" class="absolute inset-0 w-full h-full opacity-0 cursor-pointer" onchange="previewFile()">
                <span id="fileError" class="text-red-500 text-sm absolute bottom-2 hidden">Upload a valid image</span>
            </div>

            <div id="preview-container" class="relative mt-4 hidden">
                <img id="preview-image" src="<%= post.thumbnail_url %>" alt="Preview"
                     class="mx-auto max-h-64 rounded-lg object-contain transform transition duration-300">
                <div class="flex justify-center mt-2 space-x-4">
                    <button type="button" onclick="zoom(-0.1)" class="bg-gray-200 px-3 py-1 rounded hover:bg-gray-300">-</button>
                    <button type="button" onclick="zoom(0.1)" class="bg-gray-200 px-3 py-1 rounded hover:bg-gray-300">+</button>
                </div>
                <button type="button" onclick="removePreview()" class="absolute top-0 right-0 bg-red-500 text-white rounded-full w-6 h-6 flex items-center justify-center hover:bg-red-600 transition">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
                </button>
            </div>
        </div>

        <div class="text-center">
            <button type="submit" class="bg-gray-900 text-white font-bold px-6 py-2 rounded-lg shadow-md hover:bg-[#e89b00] transition">
                💾 Update Post
            </button>
        </div>
    </form>
</div>

<script>
    const uploadArea = document.getElementById('upload-area');
    const fileInput = document.getElementById('thumbnail');
    const previewContainer = document.getElementById('preview-container');
    const previewImage = document.getElementById('preview-image');
    const fileError = document.getElementById('fileError');
    let currentScale = 1;

    // Function to preview the uploaded file
    function previewFile() {
        const file = fileInput.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                previewImage.src = e.target.result;
                previewContainer.classList.remove('hidden');
                uploadArea.classList.add('hidden');
                fileError.classList.add('hidden');
            }
            reader.onerror = function() {
                fileError.textContent = 'Failed to load file.';
                fileError.classList.remove('hidden');
                fileInput.value = ''; // Clear the input
            }
            // Basic client-side validation (you should also do server-side validation)
            if (file.type.startsWith('image/')) {
                reader.readAsDataURL(file);
            } else {
                fileError.textContent = 'Please upload a valid image file.';
                fileError.classList.remove('hidden');
                fileInput.value = ''; // Clear the input
                previewContainer.classList.add('hidden');
                uploadArea.classList.remove('hidden');
            }
        } else {
            // If no file is selected and there was no previous image
            if (!previewImage.src || previewImage.src === '<%= post.thumbnail_url %>') {
                previewContainer.classList.add('hidden');
                uploadArea.classList.remove('hidden');
            }
            fileError.classList.add('hidden');
        }
    }

    // Drag and drop functionality
    uploadArea.addEventListener('dragover', (e) => {
        e.preventDefault();
        uploadArea.classList.add('border-[#f8b102]', 'bg-gray-100');
    });

    uploadArea.addEventListener('dragleave', () => {
        uploadArea.classList.remove('border-[#f8b102]', 'bg-gray-100');
    });

    uploadArea.addEventListener('drop', (e) => {
        e.preventDefault();
        uploadArea.classList.remove('border-[#f8b102]', 'bg-gray-100');
        fileInput.files = e.dataTransfer.files;
        previewFile();
    });

    // Zoom functionality
    function zoom(scaleChange) {
        currentScale += scaleChange;
        currentScale = Math.max(0.5, Math.min(2, currentScale)); // Limit zoom level
        previewImage.style.transform = `scale(${currentScale})`;
        previewContainer.classList.add('zoomed'); // Add a class for potential specific zoomed styling
    }

    // Remove preview functionality
    function removePreview() {
        previewImage.src = '<%= post.thumbnail_url %>'; // Revert to the existing image
        fileInput.value = ''; // Clear the file input
        previewContainer.classList.add('hidden');
        uploadArea.classList.remove('hidden');
        fileError.classList.add('hidden');
        currentScale = 1;
        previewImage.style.transform = `scale(${currentScale})`;
        previewContainer.classList.remove('zoomed');
    }

    // Initialize preview if there's an existing thumbnail
    if (previewImage.src && previewImage.src !== '') {
        previewContainer.classList.remove('hidden');
        uploadArea.classList.add('hidden');
    }
</script>

</body>
</html>