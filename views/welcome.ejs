<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Welcome</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 20px;
      padding: 20px;
    }

    .container {
      max-width: 1000px;
      margin: auto;
    }

    .card {
      border: 1px solid #ccc;
      padding: 15px;
      margin-bottom: 15px;
      border-radius: 8px;
      box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
    }

    .category-btn {
      display: inline-block;
      margin-right: 10px;
      padding: 5px 10px;
      background: #007bff;
      color: white;
      border-radius: 5px;
      text-decoration: none;
    }

    .category-btn:hover {
      background: #0056b3;
    }

    .logout-btn {
      background: red;
    }

    .logout-btn:hover {
      background: darkred;
    }

    .save-btn {
      background-color: #28a745;
      color: white;
      border: none;
      padding: 5px 10px;
      border-radius: 5px;
      cursor: pointer;
    }

    .save-btn:hover {
      background-color: #218838;
    }

    .comment {
      margin-top: 10px;
      padding: 10px;
      background-color: #f1f1f1;
      border-radius: 5px;
    }

    .comment-btn {
      margin-top: 10px;
    }

    .comment-actions {
      margin-top: 10px;
    }
  </style>
</head>

<body>
  <div class="container">
    <h1>Welcome, <%= username %>!</h1>
    <p>You are successfully logged in.</p>
    <a href="/logout" class="category-btn logout-btn">Logout</a>

    <h2>Categories</h2>
    <div>
      <a href="/" class="category-btn">All</a>
      <% categories.forEach(category => { %>
        <a href="/?category=<%= category.category_id %>" class="category-btn">
          <%= category.name %>
        </a>
      <% }) %>
    </div>

    <h2>Posts</h2>
    <% if (posts.length > 0) { %>
      <% posts.forEach(post => { %>
        <div class="card">
          <h3>
            <%= post.title %>
          </h3>
          <p>
            <%= post.content.length > 200 ? post.content.substring(0, 200) + '...' : post.content %>
          </p>
          <small>Posted on <%= new Date(post.created_at).toDateString() %> |
              Category: <%= post.category ? post.category.name : 'No Category' %></small>

          <!-- Comments Section -->
          <div class="comments-section">
            <textarea id="newComment<%= post.post_id %>" placeholder="Write a comment..."></textarea>
            <button class="category-btn comment-btn" onclick="addComment('<%= post.post_id %>')">Add Comment</button>
            <h4>Comments</h4>
            <% if (post.Comments && post.Comments.length > 0) { %>
              <% post.Comments.forEach(comment => { %>
                <div class="comment">
                  <p><strong><%= comment.User.username %>:</strong> <%= comment.content %></p>
                  <small>Posted on: <%= new Date(comment.created_at).toDateString() %></small>
                  <div class="comment-actions">
                    <button class="category-btn" onclick="editComment('<%= comment.comment_id %>')">Edit</button>
                    <button class="category-btn" onclick="deleteComment('<%= comment.comment_id %>')">Delete</button>
                  </div>
                </div>
              <% }) %>
            <% } else { %>
              <p>No comments yet.</p>
            <% } %>
          </div>
        </div>
      <% }) %>
    <% } else { %>
      <p>No posts found.</p>
    <% } %>
  </div>

  <script>
    // Add Comment
    async function addComment(postId) {
      const content = document.getElementById(`newComment${postId}`).value;
      if (!content) return alert('Comment content cannot be empty');

      try {
        const res = await fetch('/comment', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ post_id: postId, content })
        });
        const data = await res.json();
        alert(data.message || 'Error');
        location.reload();
      } catch (error) {
        alert('Something went wrong');
      }
    }

    // Edit Comment
    async function editComment(commentId) {
      const content = prompt('Edit your comment:');
      if (content) {
        try {
          const res = await fetch(`/comment/${commentId}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ content })
          });
          const data = await res.json();
          alert(data.message || 'Error');
          location.reload();
        } catch (error) {
          alert('Something went wrong');
        }
      }
    }

    // Delete Comment
    async function deleteComment(commentId) {
      if (confirm('Are you sure you want to delete this comment?')) {
        try {
          const res = await fetch(`/comment/${commentId}`, {
            method: 'DELETE'
          });
          const data = await res.json();
          alert(data.message || 'Error');
          location.reload();
        } catch (error) {
          alert('Something went wrong');
        }
      }
    }
  </script>
</body>

</html>
